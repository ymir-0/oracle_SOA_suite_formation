<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Feb 12 12:00:14 CET 2018
  Author:  oracle
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="EnrollmentProcess"
               targetNamespace="http://xmlns.oracle.com/BookingSystemApp/Enroll/EnrollmentProcess"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/BookingSystemApp/Enroll/EnrollmentProcess"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://xmlns.oracle.com/Projects/BookingSystem/Booking"
         xmlns:ns2="http://www.example.org/ns/enroll"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap">

    <import ui:processWSDL="true" namespace="http://xmlns.oracle.com/BookingSystemApp/Enroll/EnrollmentProcess" location="../WSDLs/EnrollmentProcess.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="enrollmentprocess_client" partnerLinkType="client:EnrollmentProcess" myRole="EnrollmentProcessProvider"/>
    <partnerLink name="BookingService" partnerLinkType="ns1:Booking" partnerRole="BookingProvider"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:EnrollmentProcessRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:EnrollmentProcessResponseMessage"/>
    <variable name="Invoke_Booking_process_InputVariable" messageType="ns1:BookingRequestMessage"/>
    <variable name="Invoke_Booking_process_OutputVariable" messageType="ns1:BookingResponseMessage"/>
    <variable name="Invoke_Payment_process_InputVariable" messageType="ns1:BookingRequestMessage"/>
    <variable name="Invoke_Payment_process_OutputVariable" messageType="ns1:BookingResponseMessage"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in EnrollmentProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="enrollmentprocess_client" portType="client:EnrollmentProcess" operation="process" variable="inputVariable" createInstance="yes"/>
    <scope name="Scope_Outer">
      <faultHandlers>
        <catch faultName="ns1:paymentFault" faultVariable="faultVariable" faultMessageType="ns1:BookingFaultMessage">
          <sequence name="Sequence4">
            <compensateScope name="CompensateScope1" target="Scope_Inner"/>
            <assign name="setFault">
              <copy>
                <from>'Payment invalid or over limit.'</from>
                <to>$outputVariable.payload</to>
              </copy>
            </assign>
          </sequence>
        </catch>
      </faultHandlers>
      <sequence name="Sequence2">
        <scope name="Scope_Inner">
          <compensationHandler>
            <sequence name="Sequence3">
              <assign name="setCancel">
                <copy>
                  <from>$inputVariable.payload/ns2:Id</from>
                  <to>$Invoke_Booking_process_InputVariable.payload/ns2:Id</to>
                </copy>
                <copy>
                  <from>'CANCELLATION'</from>
                  <to>$Invoke_Booking_process_InputVariable.payload/ns2:type</to>
                </copy>
              </assign>
              <invoke name="Invoke_Cancel" partnerLink="BookingService" portType="ns1:Booking" operation="process"
                      inputVariable="Invoke_Booking_process_InputVariable"
                      outputVariable="Invoke_Booking_process_OutputVariable" bpelx:invokeAsDetail="no"/>
            </sequence>
          </compensationHandler>
          <sequence name="Sequence1">
            <assign name="setBooking">
              <copy>
                <from>$inputVariable.payload/ns2:Id</from>
                <to>$Invoke_Booking_process_InputVariable.payload/ns2:Id</to>
              </copy>
              <copy>
                <from>$inputVariable.payload/ns2:student</from>
                <to>$Invoke_Booking_process_InputVariable.payload/ns2:student</to>
              </copy>
              <copy>
                <from>$inputVariable.payload/ns2:course</from>
                <to>$Invoke_Booking_process_InputVariable.payload/ns2:course</to>
              </copy>
              <copy>
                <from>'ENROLLMENT'</from>
                <to>$Invoke_Booking_process_InputVariable.payload/ns2:type</to>
              </copy>
            </assign>
            <invoke name="Invoke_Booking" partnerLink="BookingService" portType="ns1:Booking" operation="process"
                    inputVariable="Invoke_Booking_process_InputVariable"
                    outputVariable="Invoke_Booking_process_OutputVariable" bpelx:invokeAsDetail="no"/>
          </sequence>
        </scope>
        <assign name="setPayment">
          <copy>
            <from>$inputVariable.payload/ns2:Id</from>
            <to>$Invoke_Payment_process_InputVariable.payload/ns2:Id</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns2:cardNumber</from>
            <to>$Invoke_Payment_process_InputVariable.payload/ns2:cardNumber</to>
          </copy>
          <copy>
            <from>$inputVariable.payload/ns2:amount</from>
            <to>$Invoke_Payment_process_InputVariable.payload/ns2:amount</to>
          </copy>
          <copy>
            <from>'PAYMENT'</from>
            <to>$Invoke_Payment_process_InputVariable.payload/ns2:type</to>
          </copy>
        </assign>
        <invoke name="Invoke_Payment" bpelx:invokeAsDetail="no" partnerLink="BookingService" portType="ns1:Booking"
                operation="process" inputVariable="Invoke_Payment_process_InputVariable"
                outputVariable="Invoke_Payment_process_OutputVariable"/>
        <assign name="setSuccess">
          <copy>
            <from>'Enrollment process completed successfully'</from>
            <to>$outputVariable.payload</to>
          </copy>
        </assign>
      </sequence>
    </scope>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="enrollmentprocess_client" portType="client:EnrollmentProcess" operation="process" variable="outputVariable"/>
  </sequence>
</process>