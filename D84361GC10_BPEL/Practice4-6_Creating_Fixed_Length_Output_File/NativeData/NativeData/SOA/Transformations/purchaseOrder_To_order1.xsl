<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:tns="http://www.example.org/ns/intorder"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:ns0="http://TargetNamespace.com/ReadFile"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 tns oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:pc="http://xmlns.oracle.com/pcbpel/" xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/file/NativeData/NativeData/ReadFile"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/file/NativeData/NativeData/WriteFile">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/ReadFile.wsdl"/>
        <oracle-xsl-mapper:rootElement name="purchaseOrder" namespace="http://TargetNamespace.com/ReadFile"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="WSDL">
        <oracle-xsl-mapper:schema location="../WSDLs/WriteFile.wsdl"/>
        <oracle-xsl-mapper:rootElement name="order" namespace="http://www.example.org/ns/intorder"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [THU FEB 08 16:27:00 CET 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:order>
      <tns:customerId>
        <xsl:value-of select="/ns0:purchaseOrder/ns0:customer/ns0:custID"/>
      </tns:customerId>
      <tns:orderId>
        <xsl:value-of select="/ns0:purchaseOrder/ns0:customer/ns0:ID"/>
      </tns:orderId>
      <tns:payMethod>
        <xsl:value-of select="/ns0:purchaseOrder/ns0:customer/ns0:payOption"/>
      </tns:payMethod>
      <tns:shipMethod>
        <xsl:value-of select="/ns0:purchaseOrder/ns0:customer/ns0:shipChoice"/>
      </tns:shipMethod>
      <tns:status>
        <xsl:value-of select="/ns0:purchaseOrder/ns0:customer/ns0:status"/>
      </tns:status>
      <tns:creditCard>
        <tns:cardType>
          <xsl:value-of select="/ns0:purchaseOrder/ns0:customer/ns0:ccType"/>
        </tns:cardType>
        <tns:cardNumber>
          <xsl:value-of select="/ns0:purchaseOrder/ns0:customer/ns0:ccNumber"/>
        </tns:cardNumber>
      </tns:creditCard>
      <tns:items>
        <xsl:for-each select="/ns0:purchaseOrder/ns0:itemlist/ns0:item">
          <tns:item>
            <tns:prodId>
              <xsl:value-of select="ns0:prodID"/>
            </tns:prodId>
            <tns:prodName>
              <xsl:value-of select="ns0:prodName"/>
            </tns:prodName>
            <tns:price>
              <xsl:value-of select="ns0:price"/>
            </tns:price>
            <tns:qty>
              <xsl:value-of select="ns0:quantity"/>
            </tns:qty>
          </tns:item>
        </xsl:for-each>
      </tns:items>
    </tns:order>
  </xsl:template>
</xsl:stylesheet>
